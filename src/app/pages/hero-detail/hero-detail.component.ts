import { Component, Inject } from '@angular/core';
// Imports:
import { HeroesService } from 'src/app/services/heroes.service';
import { Observable } from 'rxjs';
import { Router } from '@angular/router';
import { DataShareService } from 'src/app/services/data-share.service';

@Component({
  selector: 'app-hero-detail',
  templateUrl: './hero-detail.component.html',
  styleUrls: ['./hero-detail.component.css']
})
export class HeroDetailComponent {

    incomingData: any;
    data: any;
    character: any;
    imgUrl: any;
    charDescription: any;

    // Service injection:
    constructor (
      private DataShareService: DataShareService,
      private heroesService: HeroesService,
      private router : Router,
      // In strict mode, all variables must be initialized,
      // so 'heroes' is declared as public, inside the constructor
      @Inject(HeroesService) public hero: Observable<any>, // Inject decorator is necessary for the dependency to work
      ) {
        this.data = this.DataShareService.getDataStream(); // Gets streamed data from DataShareService

        this.data.subscribe({
          next:(data: any) => {
            this.incomingData = data; // Receives streamed data from DataShareService (Character ID from hero-list component)
            console.log("Mostrar Incoming Data: ", this.incomingData);
          },
          error: (err: any) => {
            console.log("Falló DataShareService: ",err);
          }
        });

      }

  // Variables for URL generation:
  PUBLIC_KEY = 'ddbe649e8f64b8a35ba2a6203c2e9b86';
  // HASH is generated by passing this string combination: 1 + Private Key + Public Key
  // through a MD5 Hash Generator ( https://letmegooglethat.com/?q=MD5+hash+generator )
  // The Public and Private Keys are provided by the API ( https://developer.marvel.com/ )
  HASH = '1c820bbadd4cd42eb3139d95fe35aa64';

  ngOnInit() {
    this.getHeroById(this.incomingData);
  }

  ngAfterViewInit() {
    //this.getHeroById(this.incomingData);
  }

  ngOnDestroy() {
    //this.data.unsubscribe();
  }

  getHeroById(id: any) {

    let URL_API = `https:gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${this.PUBLIC_KEY}&hash=${this.HASH}`;
    //let URL_API = `https:gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${this.PUBLIC_KEY}&hash=${this.HASH}&offset=0&limit=100`;

    this.hero = this.heroesService.getHeroById(URL_API);
    this.hero.subscribe({
      next:(data: any) => {
        this.character = data;
        //console.log("Mostrar Personaje: ", this.character);
        this.imgUrl = this.character[0].thumbnail.path + '.' + this.character[0].thumbnail.extension
        //console.log("URL IMG: ", this.imgUrl);
        this.checkDescription();
      },
      error: (err: any) => {
        console.log("Falló getHeroById: ",err);
      }
    });

  }

// =========================================================
// ================= [ HELPER FUNCTIONS ] ==================
// =========================================================

checkDescription() {
  if ( this.character[0].description == '' )
  {
    this.charDescription = 'No information available';
  } else
  {
    this.charDescription = this.character[0].description;
  }
}

}
